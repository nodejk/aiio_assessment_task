# Generated by Django 5.0.6 on 2024-06-15 23:18

import json
from pathlib import Path

from django.db import migrations


def read_json(json_path):
    required_data = None
    with open(json_path, "r") as file:
        payload = json.load(file)
        required_data = payload

        file.close()

    return required_data


def migrate_json_data(
    apps,
    products_json_path,
    sub_category_json_path,
    sub_product_json_path,
):

    Product = apps.get_model("api", "Product")
    SubCategory = apps.get_model("api", "SubCategory")
    SubProduct = apps.get_model("api", "SubProduct")

    products_data = read_json(products_json_path).get("products", None)
    sub_category_data = read_json(sub_category_json_path).get("subcatergories", None)
    sub_product_data = read_json(sub_product_json_path).get("subproducts", None)

    for product in products_data:
        product_id = product.get("productId", None)
        product_name = product.get("productName", None)

        if product_name is None or product_id is None:
            raise Exception("product name not provided")

        created_product = Product.objects.create(
            name=product_name,
        )

        required_sub_categories = [i for i in sub_category_data if int(i["productId"]) == int(product_id)]

        for sub_category in required_sub_categories:
            sub_category_id = sub_category.get("subCategoryId", None)
            sub_category_name = sub_category.get("subCategoryName", None)

            created_sub_category = SubCategory.objects.create(name=sub_category_name, product=created_product)

            required_sub_products = [i for i in sub_product_data if int(i["subCategoryId"]) == int(sub_category_id)]

            for sub_product in required_sub_products:
                sub_product_name = sub_product.get("subProductName", None)

                if sub_product_name is None:
                    raise Exception("sub_product not name given")

                temp = SubProduct.objects.create(
                    name=sub_product_name,
                    sub_category=created_sub_category,
                )


def main(apps, schema_editor):
    cwd = Path.cwd()
    root_json_path = cwd / "api" / "data"

    product_json_path = root_json_path / "products.json"
    sub_category_json_path = root_json_path / "subcategories.json"
    sub_product_json_path = root_json_path / "subproducts.json"

    migrate_json_data(
        apps=apps,
        products_json_path=product_json_path,
        sub_category_json_path=sub_category_json_path,
        sub_product_json_path=sub_product_json_path,
    )


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(main),
    ]
